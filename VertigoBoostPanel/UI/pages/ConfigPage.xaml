<Page
	x:Class="VertigoBoostPanel.UI.pages.ConfigPage" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity" xmlns:local="clr-namespace:VertigoBoostPanel.UI.pages" xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
	Title="ConfigPage">
	<FrameworkElement.Resources>
		<ResourceDictionary>
			<BooleanToVisibilityConverter
				x:Key="booleanToVisibilityConverter" />
			<Style
				x:Key="ListBoxItemStyle1"
				TargetType="{x:Type ListBoxItem}">
				<Setter
					Property="FrameworkElement.FocusVisualStyle"
					Value="{x:Null}" />
				<Setter
					Property="Control.Background"
					Value="#00FFFFFF" />
				<Setter
					Property="Control.HorizontalContentAlignment"
					Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
				<Setter
					Property="Control.VerticalContentAlignment"
					Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
				<Setter
					Property="Control.Padding"
					Value="0,0,0,0" />
				<Setter
					Property="Control.Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type ListBoxItem}">
							<Border
								Name="Bd"
								CornerRadius="8"
								Border.BorderBrush="{TemplateBinding Control.BorderBrush}"
								Border.BorderThickness="{TemplateBinding Control.BorderThickness}"
								Border.Background="{TemplateBinding Control.Background}"
								Padding="{TemplateBinding Control.Padding}"
								SnapsToDevicePixels="True">
								<ContentPresenter
									FrameworkElement.HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
									SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
									FrameworkElement.VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
							</Border>
							<ControlTemplate.Triggers>
								<Trigger
									Property="ListBoxItem.IsSelected"
									Value="True">
									<Setter
										Property="FrameworkElement.FocusVisualStyle"
										Value="{x:Null}" />
									<Setter
										Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"
										Property="Control.Foreground" />
								</Trigger>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition
											Property="ListBoxItem.IsSelected"
											Value="True" />
										<Condition
											Property="Selector.IsSelectionActive"
											Value="False" />
									</MultiTrigger.Conditions>
									<Setter
										Property="FrameworkElement.FocusVisualStyle"
										Value="{x:Null}" />
									<Setter
										Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
										Property="Control.Foreground" />
								</MultiTrigger>
								<Trigger
									Property="UIElement.IsEnabled"
									Value="False">
									<Setter
										Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"
										Property="Control.Foreground" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style
				x:Key="{x:Type ComboBoxItem}"
				TargetType="{x:Type ComboBoxItem}">
				<Setter
					Property="Control.Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type ComboBoxItem}">
							<Border
								Border.Background="{TemplateBinding Control.Background}">
								<Grid>
									<Grid.RowDefinitions>
										<RowDefinition />
										<RowDefinition />
									</Grid.RowDefinitions>
									<Border
										FrameworkElement.Margin="10"
										Grid.Row="0"
										Border.Background="#00FFFFFF" />
									<ContentPresenter />
								</Grid>
							</Border>
							<ControlTemplate.Triggers>
								<Trigger
									Property="UIElement.IsMouseOver"
									Value="True">
									<Setter
										Property="Control.Background"
										Value="#151618" />
								</Trigger>
								<Trigger
									Property="ListBoxItem.IsSelected"
									Value="True">
									<Setter
										Property="Control.Background"
										Value="#151618" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style
				x:Key="CheckBoxStyle1"
				TargetType="{x:Type CheckBox}">
				<Setter
					Property="FrameworkElement.Cursor"
					Value="Hand" />
				<Setter
					Property="Control.Foreground"
					Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
				<Setter
					Property="Control.Background"
					Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
				<Setter
					Property="Control.Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type CheckBox}">
							<FrameworkTemplate.Resources>
								<ResourceDictionary>
									<Storyboard
										x:Key="OnChecking">
										<DoubleAnimationUsingKeyFrames
											BeginTime="00:00:00"
											Storyboard.TargetName="slider"
											Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
											<SplineDoubleKeyFrame
												KeyTime="00:00:00.3000000"
												Value="25" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
									<Storyboard
										x:Key="OnUnchecking">
										<DoubleAnimationUsingKeyFrames
											BeginTime="00:00:00"
											Storyboard.TargetName="slider"
											Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
											<SplineDoubleKeyFrame
												KeyTime="00:00:00.3000000"
												Value="0" />
										</DoubleAnimationUsingKeyFrames>
										<ThicknessAnimationUsingKeyFrames
											BeginTime="00:00:00"
											Storyboard.TargetName="slider"
											Storyboard.TargetProperty="(FrameworkElement.Margin)">
											<SplineThicknessKeyFrame
												KeyTime="00:00:00.3000000"
												Value="1,1,1,1" />
										</ThicknessAnimationUsingKeyFrames>
									</Storyboard>
								</ResourceDictionary>
							</FrameworkTemplate.Resources>
							<DockPanel
								Name="dockPanel">
								<ContentPresenter
									SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
									ContentPresenter.Content="{TemplateBinding ContentControl.Content}"
									ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
									ContentPresenter.ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
									ContentPresenter.RecognizesAccessKey="True"
									FrameworkElement.VerticalAlignment="Center" />
								<Grid
									FrameworkElement.Margin="5,5,0,5"
									FrameworkElement.Width="50"
									Panel.Background="#FF1B1C21">
									<Border
										Name="slider"
										FrameworkElement.HorizontalAlignment="Left"
										FrameworkElement.Width="23"
										FrameworkElement.Height="15"
										Border.BorderThickness="1,1,1,1"
										CornerRadius="3,3,3,3"
										RenderTransformOrigin="0.5,0.5"
										FrameworkElement.Margin="1,1,1,1">
										<UIElement.RenderTransform>
											<TransformGroup>
												<ScaleTransform
													ScaleX="1"
													ScaleY="1" />
												<SkewTransform
													AngleX="0"
													AngleY="0" />
												<RotateTransform
													Angle="0" />
												<TranslateTransform
													X="0"
													Y="0" />
											</TransformGroup>
										</UIElement.RenderTransform>
										<Border.BorderBrush>
											<LinearGradientBrush
												EndPoint="0.5,1"
												StartPoint="0.5,0">
												<GradientStop
													Color="Transparent"
													Offset="0" />
											</LinearGradientBrush>
										</Border.BorderBrush>
										<Border.Background>
											<LinearGradientBrush
												EndPoint="0.5,1"
												StartPoint="0.5,0">
												<GradientStop
													Color="#FF4D4D4D" />
											</LinearGradientBrush>
										</Border.Background>
									</Border>
								</Grid>
							</DockPanel>
							<ControlTemplate.Triggers>
								<Trigger
									Property="ToggleButton.IsChecked"
									Value="True">
									<TriggerBase.ExitActions>
										<BeginStoryboard
											Name="OnUnchecking_BeginStoryboard"
											BeginStoryboard.Storyboard="{StaticResource OnUnchecking}" />
									</TriggerBase.ExitActions>
									<TriggerBase.EnterActions>
										<BeginStoryboard
											Name="OnChecking_BeginStoryboard"
											BeginStoryboard.Storyboard="{StaticResource OnChecking}" />
									</TriggerBase.EnterActions>
									<Setter
										Property="UIElement.Opacity"
										Value="1" />
								</Trigger>
								<Trigger
									Property="ToggleButton.IsChecked"
									Value="False">
									<Setter
										Property="UIElement.Opacity"
										Value="0.7" />
								</Trigger>
								<Trigger
									Property="UIElement.IsEnabled"
									Value="False">
									<Setter
										Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"
										Property="Control.Foreground" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style
				x:Key="FocusVisual">
				<Setter
					Property="Control.Template">
					<Setter.Value>
						<ControlTemplate />
					</Setter.Value>
				</Setter>
			</Style>
			<LinearGradientBrush
				x:Key="ComboBox.Static.Background"
				EndPoint="0,1"
				StartPoint="0,0">
				<GradientStop
					Color="#FF141519"
					Offset="0.0" />
				<GradientStop
					Color="#FF141519"
					Offset="1.0" />
			</LinearGradientBrush>
			<SolidColorBrush
				x:Key="ComboBox.Static.Border"
				Color="#FF141519" />
			<SolidColorBrush
				x:Key="ComboBox.Static.Editable.Background"
				Color="#FF141519" />
			<SolidColorBrush
				x:Key="ComboBox.Static.Editable.Border"
				Color="#FF141519" />
			<LinearGradientBrush
				x:Key="ComboBox.MouseOver.Background"
				EndPoint="0,1"
				StartPoint="0,0">
				<GradientStop
					Color="#FF141519"
					Offset="0.0" />
				<GradientStop
					Color="#FF141519"
					Offset="1.0" />
			</LinearGradientBrush>
			<SolidColorBrush
				x:Key="ComboBox.MouseOver.Border"
				Color="#FF141519" />
			<SolidColorBrush
				x:Key="ComboBox.MouseOver.Editable.Background"
				Color="#FF141519" />
			<SolidColorBrush
				x:Key="ComboBox.MouseOver.Editable.Border"
				Color="#FF141519" />
			<LinearGradientBrush
				x:Key="ComboBox.MouseOver.Editable.Button.Background"
				EndPoint="0,1"
				StartPoint="0,0">
				<GradientStop
					Color="#FF141519"
					Offset="0.0" />
				<GradientStop
					Color="#FF141519"
					Offset="1.0" />
			</LinearGradientBrush>
			<SolidColorBrush
				x:Key="ComboBox.MouseOver.Editable.Button.Border"
				Color="#FF141519" />
			<LinearGradientBrush
				x:Key="ComboBox.Pressed.Background"
				EndPoint="0,1"
				StartPoint="0,0">
				<GradientStop
					Color="#FF141519"
					Offset="0.0" />
				<GradientStop
					Color="#FF141519"
					Offset="1.0" />
			</LinearGradientBrush>
			<SolidColorBrush
				x:Key="ComboBox.Pressed.Border"
				Color="#FF141519" />
			<SolidColorBrush
				x:Key="ComboBox.Pressed.Editable.Background"
				Color="#FF141519" />
			<SolidColorBrush
				x:Key="ComboBox.Pressed.Editable.Border"
				Color="#FF141519" />
			<LinearGradientBrush
				x:Key="ComboBox.Pressed.Editable.Button.Background"
				EndPoint="0,1"
				StartPoint="0,0">
				<GradientStop
					Color="#FF141519"
					Offset="0.0" />
				<GradientStop
					Color="#FF141519"
					Offset="1.0" />
			</LinearGradientBrush>
			<SolidColorBrush
				x:Key="ComboBox.Pressed.Editable.Button.Border"
				Color="#FF141519" />
			<SolidColorBrush
				x:Key="ComboBox.Disabled.Border"
				Color="#FF141519" />
			<SolidColorBrush
				x:Key="ComboBox.Disabled.Editable.Background"
				Color="#FF141519" />
			<SolidColorBrush
				x:Key="ComboBox.Disabled.Editable.Border"
				Color="#FF141519" />
			<Style
				x:Key="ComboBoxToggleButton"
				TargetType="{x:Type ToggleButton}">
				<Setter
					Property="FrameworkElement.OverridesDefaultStyle"
					Value="True" />
				<Setter
					Property="Control.IsTabStop"
					Value="False" />
				<Setter
					Property="UIElement.Focusable"
					Value="False" />
				<Setter
					Property="ButtonBase.ClickMode"
					Value="Press" />
				<Setter
					Property="Control.Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type ToggleButton}">
							<Border
								Name="templateRoot"
								SnapsToDevicePixels="True"
								Border.BorderThickness="{TemplateBinding Control.BorderThickness}"
								Border.Background="{StaticResource ComboBox.Static.Background}"
								Border.BorderBrush="{StaticResource ComboBox.Static.Border}">
								<Border
									Name="splitBorder"
									FrameworkElement.Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
									SnapsToDevicePixels="True"
									FrameworkElement.Margin="0"
									FrameworkElement.HorizontalAlignment="Right"
									Border.BorderThickness="1"
									Border.BorderBrush="#00FFFFFF">
									<Path
										Name="arrow"
										FrameworkElement.VerticalAlignment="Center"
										FrameworkElement.Margin="0"
										FrameworkElement.HorizontalAlignment="Center"
										Shape.Fill="#fff"
										Path.Data="F1 M0,0 L2.667,2.66665 L5.3334,0 L5.3334,-1.78168 L2.6667,0.88501 L0,-1.78168 L0,0 Z" />
								</Border>
							</Border>
							<ControlTemplate.Triggers>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition
											Value="true"
											Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" />
										<Condition
											Value="false"
											Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" />
										<Condition
											Value="false"
											Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" />
										<Condition
											Value="true"
											Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" />
									</MultiDataTrigger.Conditions>
									<Setter
										TargetName="templateRoot"
										Property="Border.Background"
										Value="{StaticResource ComboBox.Static.Editable.Background}" />
									<Setter
										TargetName="templateRoot"
										Property="Border.BorderBrush"
										Value="{StaticResource ComboBox.Static.Editable.Border}" />
									<Setter
										TargetName="splitBorder"
										Property="Border.Background"
										Value="#FF141519" />
									<Setter
										TargetName="splitBorder"
										Property="Border.BorderBrush"
										Value="#FF141519" />
								</MultiDataTrigger>
								<Trigger
									Property="UIElement.IsMouseOver"
									Value="True">
									<Setter
										TargetName="arrow"
										Property="Shape.Fill"
										Value="#fff" />
								</Trigger>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition
											Value="true"
											Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" />
										<Condition
											Value="false"
											Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" />
									</MultiDataTrigger.Conditions>
									<Setter
										TargetName="templateRoot"
										Property="Border.Background"
										Value="{StaticResource ComboBox.MouseOver.Background}" />
									<Setter
										TargetName="templateRoot"
										Property="Border.BorderBrush"
										Value="{StaticResource ComboBox.MouseOver.Border}" />
								</MultiDataTrigger>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition
											Value="true"
											Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" />
										<Condition
											Value="true"
											Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" />
									</MultiDataTrigger.Conditions>
									<Setter
										TargetName="templateRoot"
										Property="Border.Background"
										Value="{StaticResource ComboBox.MouseOver.Editable.Background}" />
									<Setter
										TargetName="templateRoot"
										Property="Border.BorderBrush"
										Value="{StaticResource ComboBox.MouseOver.Editable.Border}" />
									<Setter
										TargetName="splitBorder"
										Property="Border.Background"
										Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}" />
									<Setter
										TargetName="splitBorder"
										Property="Border.BorderBrush"
										Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}" />
								</MultiDataTrigger>
								<Trigger
									Property="ButtonBase.IsPressed"
									Value="True">
									<Setter
										TargetName="arrow"
										Property="Shape.Fill"
										Value="#fff" />
								</Trigger>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition
											Value="true"
											Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" />
										<Condition
											Value="false"
											Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" />
									</MultiDataTrigger.Conditions>
									<Setter
										TargetName="templateRoot"
										Property="Border.Background"
										Value="{StaticResource ComboBox.Pressed.Background}" />
									<Setter
										TargetName="templateRoot"
										Property="Border.BorderBrush"
										Value="{StaticResource ComboBox.Pressed.Border}" />
								</MultiDataTrigger>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition
											Value="true"
											Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" />
										<Condition
											Value="true"
											Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" />
									</MultiDataTrigger.Conditions>
									<Setter
										TargetName="templateRoot"
										Property="Border.Background"
										Value="{StaticResource ComboBox.Pressed.Editable.Background}" />
									<Setter
										TargetName="templateRoot"
										Property="Border.BorderBrush"
										Value="{StaticResource ComboBox.Pressed.Editable.Border}" />
									<Setter
										TargetName="splitBorder"
										Property="Border.Background"
										Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}" />
									<Setter
										TargetName="splitBorder"
										Property="Border.BorderBrush"
										Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}" />
								</MultiDataTrigger>
								<Trigger
									Property="UIElement.IsEnabled"
									Value="False">
									<Setter
										TargetName="arrow"
										Property="Shape.Fill"
										Value="#fff" />
								</Trigger>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition
											Value="false"
											Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" />
										<Condition
											Value="false"
											Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" />
									</MultiDataTrigger.Conditions>
									<Setter
										TargetName="templateRoot"
										Property="Border.Background"
										Value="#FF141519" />
									<Setter
										TargetName="templateRoot"
										Property="Border.BorderBrush"
										Value="{StaticResource ComboBox.Disabled.Border}" />
								</MultiDataTrigger>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition
											Value="false"
											Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" />
										<Condition
											Value="true"
											Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" />
									</MultiDataTrigger.Conditions>
									<Setter
										TargetName="templateRoot"
										Property="Border.Background"
										Value="{StaticResource ComboBox.Disabled.Editable.Background}" />
									<Setter
										TargetName="templateRoot"
										Property="Border.BorderBrush"
										Value="{StaticResource ComboBox.Disabled.Editable.Border}" />
									<Setter
										TargetName="splitBorder"
										Property="Border.Background"
										Value="#FF141519" />
									<Setter
										TargetName="splitBorder"
										Property="Border.BorderBrush"
										Value="#FF141519" />
								</MultiDataTrigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<ControlTemplate
				x:Key="ComboBoxTemplate"
				TargetType="{x:Type ComboBox}">
				<Grid
					Name="templateRoot"
					SnapsToDevicePixels="True">
					<Grid.ColumnDefinitions>
						<ColumnDefinition
							ColumnDefinition.Width="*" />
						<ColumnDefinition
							ColumnDefinition.MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
							ColumnDefinition.Width="0" />
					</Grid.ColumnDefinitions>
					<Popup
						Name="PART_Popup"
						AllowsTransparency="True"
						Grid.ColumnSpan="2"
						FrameworkElement.Margin="1"
						Popup.PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
						Popup.Placement="Bottom"
						Popup.IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
						<Themes:SystemDropShadowChrome
							Name="shadow"
							Color="Transparent"
							FrameworkElement.MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
							FrameworkElement.MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
							<Border
								Name="dropDownBorder"
								Border.BorderBrush="#FF141519"
								Border.BorderThickness="1"
								Border.Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
								Padding="4,3,4,2"
								FrameworkElement.Margin="0,5,0,0"
								CornerRadius="0">
								<ScrollViewer
									Name="DropDownScrollViewer">
									<Grid
										Name="grid"
										RenderOptions.ClearTypeHint="Enabled">
										<Canvas
											Name="canvas"
											FrameworkElement.HorizontalAlignment="Left"
											FrameworkElement.Height="0"
											FrameworkElement.VerticalAlignment="Top"
											FrameworkElement.Width="0">
											<Rectangle
												Name="opaqueRect"
												Shape.Fill="{Binding Background, ElementName=dropDownBorder}"
												FrameworkElement.Height="{Binding ActualHeight, ElementName=dropDownBorder}"
												FrameworkElement.Width="{Binding ActualWidth, ElementName=dropDownBorder}" />
										</Canvas>
										<ItemsPresenter
											Name="ItemsPresenter"
											KeyboardNavigation.DirectionalNavigation="Contained"
											SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
									</Grid>
								</ScrollViewer>
							</Border>
						</Themes:SystemDropShadowChrome>
					</Popup>
					<ToggleButton
						Name="toggleButton"
						Control.BorderBrush="{TemplateBinding Control.BorderBrush}"
						Control.BorderThickness="{TemplateBinding Control.BorderThickness}"
						Control.Background="{TemplateBinding Control.Background}"
						Grid.ColumnSpan="2"
						FrameworkElement.Style="{StaticResource ComboBoxToggleButton}"
						IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
					<ContentPresenter
						Name="contentPresenter"
						ContentPresenter.ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
						ContentPresenter.ContentTemplateSelector="{TemplateBinding ItemsControl.ItemTemplateSelector}"
						ContentPresenter.Content="{TemplateBinding ComboBox.SelectionBoxItem}"
						ContentStringFormat="{TemplateBinding ComboBox.SelectionBoxItemStringFormat}"
						FrameworkElement.HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
						IsHitTestVisible="False"
						FrameworkElement.Margin="{TemplateBinding Control.Padding}"
						SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
						FrameworkElement.VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
				</Grid>
				<ControlTemplate.Triggers>
					<Trigger
						SourceName="PART_Popup"
						Property="Popup.HasDropShadow"
						Value="True">
						<Setter
							TargetName="shadow"
							Property="FrameworkElement.Margin"
							Value="0,0,5,5" />
						<Setter
							TargetName="shadow"
							Property="Themes:SystemDropShadowChrome.Color"
							Value="#FF141519" />
					</Trigger>
					<Trigger
						Property="ItemsControl.HasItems"
						Value="False">
						<Setter
							TargetName="dropDownBorder"
							Property="FrameworkElement.Height"
							Value="95" />
					</Trigger>
					<MultiTrigger>
						<MultiTrigger.Conditions>
							<Condition
								Property="ItemsControl.IsGrouping"
								Value="True" />
							<Condition
								Property="VirtualizingPanel.IsVirtualizingWhenGrouping"
								Value="False" />
						</MultiTrigger.Conditions>
						<Setter
							Property="ScrollViewer.CanContentScroll"
							Value="False" />
					</MultiTrigger>
					<Trigger
						SourceName="DropDownScrollViewer"
						Property="ScrollViewer.CanContentScroll"
						Value="False">
						<Setter
							TargetName="opaqueRect"
							Property="Canvas.Top"
							Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
						<Setter
							TargetName="opaqueRect"
							Property="Canvas.Left"
							Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
					</Trigger>
				</ControlTemplate.Triggers>
			</ControlTemplate>
			<Style
				x:Key="ComboBoxEditableTextBox"
				TargetType="{x:Type TextBox}">
				<Setter
					Property="FrameworkElement.OverridesDefaultStyle"
					Value="True" />
				<Setter
					Property="UIElement.AllowDrop"
					Value="True" />
				<Setter
					Property="FrameworkElement.MinWidth"
					Value="0" />
				<Setter
					Property="FrameworkElement.MinHeight"
					Value="0" />
				<Setter
					Property="FrameworkElement.FocusVisualStyle"
					Value="{x:Null}" />
				<Setter
					Property="ScrollViewer.PanningMode"
					Value="VerticalFirst" />
				<Setter
					Property="Stylus.IsFlicksEnabled"
					Value="False" />
				<Setter
					Property="Control.Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type TextBox}">
							<ScrollViewer
								Name="PART_ContentHost"
								Control.Background="#00FFFFFF"
								UIElement.Focusable="False"
								ScrollViewer.HorizontalScrollBarVisibility="Hidden"
								ScrollViewer.VerticalScrollBarVisibility="Hidden" />
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<ControlTemplate
				x:Key="ComboBoxEditableTemplate"
				TargetType="{x:Type ComboBox}">
				<Grid
					Name="templateRoot"
					SnapsToDevicePixels="True">
					<Grid.ColumnDefinitions>
						<ColumnDefinition
							ColumnDefinition.Width="*" />
						<ColumnDefinition
							ColumnDefinition.MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
							ColumnDefinition.Width="0" />
					</Grid.ColumnDefinitions>
					<Popup
						Name="PART_Popup"
						AllowsTransparency="True"
						Grid.ColumnSpan="2"
						Popup.PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
						Popup.Placement="Bottom"
						Popup.IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}">
						<Themes:SystemDropShadowChrome
							Name="shadow"
							Color="Transparent"
							FrameworkElement.MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
							FrameworkElement.MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
							<Border
								Name="dropDownBorder"
								Border.BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
								Border.BorderThickness="1"
								Border.Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
								<ScrollViewer
									Name="DropDownScrollViewer">
									<Grid
										Name="grid"
										RenderOptions.ClearTypeHint="Enabled">
										<Canvas
											Name="canvas"
											FrameworkElement.HorizontalAlignment="Left"
											FrameworkElement.Height="0"
											FrameworkElement.VerticalAlignment="Top"
											FrameworkElement.Width="0">
											<Rectangle
												Name="opaqueRect"
												Shape.Fill="{Binding Background, ElementName=dropDownBorder}"
												FrameworkElement.Height="{Binding ActualHeight, ElementName=dropDownBorder}"
												FrameworkElement.Width="{Binding ActualWidth, ElementName=dropDownBorder}" />
										</Canvas>
										<ItemsPresenter
											Name="ItemsPresenter"
											KeyboardNavigation.DirectionalNavigation="Contained"
											SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
									</Grid>
								</ScrollViewer>
							</Border>
						</Themes:SystemDropShadowChrome>
					</Popup>
					<ToggleButton
						Name="toggleButton"
						Control.BorderBrush="{TemplateBinding Control.BorderBrush}"
						Control.BorderThickness="{TemplateBinding Control.BorderThickness}"
						Control.Background="{TemplateBinding Control.Background}"
						Grid.ColumnSpan="2"
						FrameworkElement.Style="{StaticResource ComboBoxToggleButton}"
						IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
					<Border
						Name="border"
						Border.Background="#FF141519"
						FrameworkElement.Margin="{TemplateBinding Control.BorderThickness}">
						<TextBox
							Name="PART_EditableTextBox"
							Control.HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
							FrameworkElement.Margin="{TemplateBinding Control.Padding}"
							Control.VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}"
							FrameworkElement.Style="{StaticResource ComboBoxEditableTextBox}"
							IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" />
					</Border>
				</Grid>
				<ControlTemplate.Triggers>
					<Trigger
						Property="UIElement.IsEnabled"
						Value="False">
						<Setter
							TargetName="border"
							Property="UIElement.Opacity"
							Value="0.56" />
					</Trigger>
					<Trigger
						Property="UIElement.IsKeyboardFocusWithin"
						Value="False">
						<Setter
							Property="Control.Foreground"
							Value="#FF000000" />
					</Trigger>
					<Trigger
						SourceName="PART_Popup"
						Property="Popup.HasDropShadow"
						Value="True">
						<Setter
							TargetName="shadow"
							Property="FrameworkElement.Margin"
							Value="0,0,5,5" />
						<Setter
							TargetName="shadow"
							Property="Themes:SystemDropShadowChrome.Color"
							Value="#FF141519" />
					</Trigger>
					<Trigger
						Property="ItemsControl.HasItems"
						Value="False">
						<Setter
							TargetName="dropDownBorder"
							Property="FrameworkElement.Height"
							Value="95" />
					</Trigger>
					<MultiTrigger>
						<MultiTrigger.Conditions>
							<Condition
								Property="ItemsControl.IsGrouping"
								Value="True" />
							<Condition
								Property="VirtualizingPanel.IsVirtualizingWhenGrouping"
								Value="False" />
						</MultiTrigger.Conditions>
						<Setter
							Property="ScrollViewer.CanContentScroll"
							Value="False" />
					</MultiTrigger>
					<Trigger
						SourceName="DropDownScrollViewer"
						Property="ScrollViewer.CanContentScroll"
						Value="False">
						<Setter
							TargetName="opaqueRect"
							Property="Canvas.Top"
							Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
						<Setter
							TargetName="opaqueRect"
							Property="Canvas.Left"
							Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
					</Trigger>
				</ControlTemplate.Triggers>
			</ControlTemplate>
			<Style
				x:Key="ComboBoxStyle1"
				TargetType="{x:Type ComboBox}">
				<Setter
					Property="FrameworkElement.FocusVisualStyle"
					Value="{StaticResource FocusVisual}" />
				<Setter
					Property="Control.Background"
					Value="{StaticResource ComboBox.Static.Background}" />
				<Setter
					Property="Control.BorderBrush"
					Value="{StaticResource ComboBox.Static.Border}" />
				<Setter
					Property="Control.Foreground"
					Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
				<Setter
					Property="Control.BorderThickness"
					Value="1" />
				<Setter
					Property="ScrollViewer.HorizontalScrollBarVisibility"
					Value="Auto" />
				<Setter
					Property="ScrollViewer.VerticalScrollBarVisibility"
					Value="Auto" />
				<Setter
					Property="Control.Padding"
					Value="6,3,5,3" />
				<Setter
					Property="ScrollViewer.CanContentScroll"
					Value="True" />
				<Setter
					Property="ScrollViewer.PanningMode"
					Value="Both" />
				<Setter
					Property="Stylus.IsFlicksEnabled"
					Value="False" />
				<Setter
					Property="Control.Template"
					Value="{StaticResource ComboBoxTemplate}" />
				<Style.Triggers>
					<Trigger
						Property="ComboBox.IsEditable"
						Value="True">
						<Setter
							Property="Control.IsTabStop"
							Value="False" />
						<Setter
							Property="Control.Padding"
							Value="2" />
						<Setter
							Property="Control.Template"
							Value="{StaticResource ComboBoxEditableTemplate}" />
					</Trigger>
				</Style.Triggers>
			</Style>
			<Style
				x:Key="chkBase"
				TargetType="{x:Type CheckBox}">
				<Setter
					Property="ToggleButton.IsChecked"
					Value="False" />
				<Setter
					Property="Control.Background"
					Value="#00FFFFFF" />
				<Setter
					Property="Control.Foreground"
					Value="#fff" />
				<Setter
					Property="Control.Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type CheckBox}">
							<DockPanel
								Panel.Background="{TemplateBinding Control.Background}"
								ToolTip="{TemplateBinding ContentControl.Content}"
								DockPanel.LastChildFill="False"
								FrameworkElement.Width="{TemplateBinding FrameworkElement.Width}">
								<Image
									Name="_img"
									FrameworkElement.Margin="0 0 3 0"
									DockPanel.Dock="Left"
									Image.Stretch="None"
									Image.Source="{Binding NullSession}" />
								<TextBlock
									DockPanel.Dock="Left"
									TextBlock.Foreground="{TemplateBinding Control.Foreground}"
									FrameworkElement.Margin="2 0 0 0"
									FrameworkElement.VerticalAlignment="Center"
									TextBlock.Text="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" />
							</DockPanel>
							<ControlTemplate.Triggers>
								<Trigger
									Property="ToggleButton.IsChecked"
									Value="true">
									<Setter
										TargetName="_img"
										Property="Image.Source"
										Value="{Binding YesSession}" />
								</Trigger>
								<Trigger
									Property="ToggleButton.IsChecked"
									Value="{x:Null}">
									<Setter
										TargetName="_img"
										Property="Image.Source"
										Value="{Binding NullSession}" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style
				x:Key="chkBase2"
				TargetType="{x:Type CheckBox}">
				<Setter
					Property="ToggleButton.IsChecked"
					Value="False" />
				<Setter
					Property="Control.Background"
					Value="#00FFFFFF" />
				<Setter
					Property="Control.Foreground"
					Value="#fff" />
				<Setter
					Property="Control.Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type CheckBox}">
							<DockPanel
								Panel.Background="{TemplateBinding Control.Background}"
								ToolTip="{TemplateBinding ContentControl.Content}"
								DockPanel.LastChildFill="False"
								FrameworkElement.Width="{TemplateBinding FrameworkElement.Width}">
								<Image
									Name="_img"
									FrameworkElement.Margin="0 0 3 0"
									DockPanel.Dock="Left"
									Image.Stretch="None"
									Image.Source="{Binding NullSession}" />
								<TextBlock
									DockPanel.Dock="Left"
									TextBlock.Foreground="{TemplateBinding Control.Foreground}"
									FrameworkElement.Margin="2 0 0 0"
									FrameworkElement.VerticalAlignment="Center"
									TextBlock.Text="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" />
							</DockPanel>
							<ControlTemplate.Triggers>
								<Trigger
									Property="ToggleButton.IsChecked"
									Value="true">
									<Setter
										TargetName="_img"
										Property="Image.Source"
										Value="{Binding YesSession}" />
								</Trigger>
								<Trigger
									Property="ToggleButton.IsChecked"
									Value="{x:Null}">
									<Setter
										TargetName="_img"
										Property="Image.Source"
										Value="{Binding NullSession}" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
		</ResourceDictionary>
	</FrameworkElement.Resources>
	<Grid>
		<Border
			Border.BorderThickness="0"
			CornerRadius="7"
			FrameworkElement.Margin="19,48,19,22"
			Border.Background="#FF1B1C21"
			RenderTransformOrigin="0.5,0.5" />
		<Grid
			Name="Title">
			<Label
				ContentControl.Content="{DynamicResource m_ConfigEditor}"
				FrameworkElement.HorizontalAlignment="Left"
				FrameworkElement.Margin="14,10,0,0"
				FrameworkElement.VerticalAlignment="Top"
				FrameworkElement.Width="294"
				Control.Foreground="#FFFFFFFF"
				Control.HorizontalContentAlignment="Left"
				Control.FontFamily="Montserrat Medium"
				Control.FontSize="18" />
		</Grid>
		<Label
			ContentControl.Content="{DynamicResource m_ChooseMap5x5}"
			FrameworkElement.HorizontalAlignment="Left"
			FrameworkElement.VerticalAlignment="Top"
			FrameworkElement.Width="174"
			Control.Foreground="#FFFFFFFF"
			Control.FontFamily="Montserrat Medium"
			Control.FontSize="11"
			FrameworkElement.Height="24"
			Control.VerticalContentAlignment="Center"
			Control.Padding="3,5,0,5"
			FrameworkElement.Margin="38,59,0,0" />
		<ComboBox
			Name="ComboBox_MapChoice_5x5"
			Control.VerticalContentAlignment="Center"
			Control.Background="#FF141519"
			Control.Foreground="#fff"
			FrameworkElement.HorizontalAlignment="Left"
			Control.BorderThickness="0"
			FrameworkElement.VerticalAlignment="Top"
			FrameworkElement.Width="170"
			FrameworkElement.Height="24"
			Control.FontFamily="Yu Gothic UI"
			FrameworkElement.Margin="40,88,0,0"
			Panel.ZIndex="202"
			FrameworkElement.Style="{DynamicResource ComboBoxStyle1}"
			Control.BorderBrush="{x:Null}">
			<FrameworkElement.Resources>
				<ResourceDictionary>
					<SolidColorBrush
						x:Key="{x:Static SystemColors.WindowBrushKey}"
						Color="#FF141519" />
					<SolidColorBrush
						x:Key="{x:Static SystemColors.HighlightBrushKey}"
						Color="Transparent" />
				</ResourceDictionary>
			</FrameworkElement.Resources>
			<i:Interaction.Triggers>
				<i:EventTrigger
					EventName="SelectionChanged">
					<i:InvokeCommandAction
						CommandParameter="ViewImportProgress"
						Command="{Binding Map_5x5_Changed}" />
				</i:EventTrigger>
			</i:Interaction.Triggers>
		</ComboBox>
		<Border
			CornerRadius="5"
			Border.Background="#FF141519"
			FrameworkElement.Margin="38,86,457,344"
			Border.BorderThickness="0"
			Panel.ZIndex="201" />
		<Label
			ContentControl.Content="{DynamicResource m_ChooseMap2x2}"
			FrameworkElement.HorizontalAlignment="Left"
			FrameworkElement.VerticalAlignment="Top"
			FrameworkElement.Width="174"
			Control.Foreground="#FFFFFFFF"
			Control.FontFamily="Montserrat Medium"
			Control.FontSize="11"
			FrameworkElement.Height="24"
			Control.VerticalContentAlignment="Center"
			Control.Padding="3,5,0,5"
			FrameworkElement.Margin="38,124,0,0" />
		<ComboBox
			Name="ComboBox_MapChoice_2x2"
			Control.VerticalContentAlignment="Center"
			Control.Background="#FF141519"
			Control.Foreground="#fff"
			FrameworkElement.HorizontalAlignment="Left"
			Control.BorderThickness="0"
			FrameworkElement.VerticalAlignment="Top"
			FrameworkElement.Width="170"
			FrameworkElement.Height="24"
			Control.FontFamily="Yu Gothic UI"
			FrameworkElement.Margin="40,153,0,0"
			Panel.ZIndex="202"
			FrameworkElement.Style="{DynamicResource ComboBoxStyle1}"
			Control.BorderBrush="{x:Null}">
			<FrameworkElement.Resources>
				<ResourceDictionary>
					<SolidColorBrush
						x:Key="{x:Static SystemColors.WindowBrushKey}"
						Color="#FF141519" />
					<SolidColorBrush
						x:Key="{x:Static SystemColors.HighlightBrushKey}"
						Color="Transparent" />
				</ResourceDictionary>
			</FrameworkElement.Resources>
			<i:Interaction.Triggers>
				<i:EventTrigger
					EventName="SelectionChanged">
					<i:InvokeCommandAction
						CommandParameter="ViewImportProgress"
						Command="{Binding Map_2x2_Changed}" />
				</i:EventTrigger>
			</i:Interaction.Triggers>
		</ComboBox>
		<Border
			CornerRadius="5"
			Border.Background="#FF141519"
			FrameworkElement.Margin="38,151,457,279"
			Border.BorderThickness="0"
			Panel.ZIndex="201" />
		<Label
			ContentControl.Content="{DynamicResource m_ChooseCompetitiveMode}"
			FrameworkElement.HorizontalAlignment="Left"
			FrameworkElement.VerticalAlignment="Top"
			FrameworkElement.Width="174"
			Control.Foreground="#FFFFFFFF"
			Control.FontFamily="Montserrat Medium"
			Control.FontSize="11"
			FrameworkElement.Height="24"
			Control.VerticalContentAlignment="Center"
			Control.Padding="3,5,0,5"
			FrameworkElement.Margin="38,210,0,0" />
		<ComboBox
			Name="ComboBox_CompetitiveMode"
			Control.VerticalContentAlignment="Center"
			Control.Background="#FF141519"
			Control.Foreground="#fff"
			FrameworkElement.HorizontalAlignment="Left"
			Control.BorderThickness="0"
			FrameworkElement.VerticalAlignment="Top"
			FrameworkElement.Width="170"
			FrameworkElement.Height="24"
			Control.FontFamily="Yu Gothic UI"
			FrameworkElement.Margin="40,237,0,0"
			Panel.ZIndex="202"
			FrameworkElement.Style="{DynamicResource ComboBoxStyle1}"
			Control.BorderBrush="{x:Null}">
			<FrameworkElement.Resources>
				<ResourceDictionary>
					<SolidColorBrush
						x:Key="{x:Static SystemColors.WindowBrushKey}"
						Color="#FF141519" />
					<SolidColorBrush
						x:Key="{x:Static SystemColors.HighlightBrushKey}"
						Color="Transparent" />
				</ResourceDictionary>
			</FrameworkElement.Resources>
			<i:Interaction.Triggers>
				<i:EventTrigger
					EventName="SelectionChanged">
					<i:InvokeCommandAction
						CommandParameter="ViewImportProgress"
						Command="{Binding CompetitiveMode_Changed}" />
				</i:EventTrigger>
			</i:Interaction.Triggers>
		</ComboBox>
		<Border
			CornerRadius="5"
			Border.Background="#FF141519"
			FrameworkElement.Margin="38,235,457,195"
			Border.BorderThickness="0"
			Panel.ZIndex="201" />
		<Label
			ContentControl.Content="{DynamicResource m_PreventSteamOverlayFromLaunching}"
			FrameworkElement.HorizontalAlignment="Left"
			FrameworkElement.VerticalAlignment="Top"
			FrameworkElement.Width="224"
			Control.Foreground="#FFFFFFFF"
			Control.FontFamily="Montserrat Medium"
			Control.FontSize="11"
			FrameworkElement.Height="24"
			Control.VerticalContentAlignment="Center"
			Control.Padding="3,5,0,5"
			FrameworkElement.Margin="262,59,0,0" />
		<TextBlock
			TextBlock.TextWrapping="Wrap"
			TextBlock.Text="{DynamicResource m_PreventTextOverlay}"
			FrameworkElement.HorizontalAlignment="Left"
			FrameworkElement.VerticalAlignment="Top"
			FrameworkElement.Width="267"
			Opacity="0.5"
			TextBlock.Foreground="#FFFFFFFF"
			TextBlock.FontWeight="Light"
			TextBlock.FontFamily="Montserrat Light"
			TextBlock.FontSize="9"
			FrameworkElement.Height="42"
			LineHeight="12"
			Padding="3,5,0,5"
			FrameworkElement.Margin="262,78,0,0" />
		<Button
			Name="OFFSteamOverlay"
			ContentControl.Content="Create"
			IsDefault="True"
			FrameworkElement.HorizontalAlignment="Left"
			FrameworkElement.VerticalAlignment="Top"
			FrameworkElement.Width="78"
			FrameworkElement.Height="25"
			Control.Foreground="#FFFFFFFF"
			Control.Background="#FF008BFF"
			Cursor="Hand"
			Panel.ZIndex="5"
			FrameworkElement.Margin="548,72,0,0"
			Control.FontFamily="Montserrat Medium"
			Control.FontWeight="Normal"
			UIElement.Visibility="{Binding Path=SteamOverlay_OffButtonState, Converter='{StaticResource booleanToVisibilityConverter}'}"
			ButtonBase.Command="{Binding SteamOverlay_On}"
			Control.BorderBrush="{x:Null}">
			<UIElement.Effect>
				<DropShadowEffect
					Opacity="0.1"
					ShadowDepth="4"
					Direction="1" />
			</UIElement.Effect>
			<Control.Template>
				<ControlTemplate>
					<Grid>
						<Rectangle
							Shape.Fill="#FFC70000"
							RadiusX="3 px"
							RadiusY="3 px" />
						<Label
							Control.HorizontalContentAlignment="Center"
							Control.VerticalContentAlignment="Center"
							ContentControl.Content="{DynamicResource m_Off}"
							Control.Foreground="#FFFFFFFF"
							Control.FontFamily="Montserrat SemiBold"
							Control.FontSize="10"
							Control.BorderBrush="#FF000000"
							OpacityMask="#FF000000"
							Panel.ZIndex="1"
							Control.FontWeight="Normal" />
					</Grid>
				</ControlTemplate>
			</Control.Template>
		</Button>
		<Button
			Name="ONSteamOverlay"
			ContentControl.Content="Create"
			IsDefault="True"
			FrameworkElement.HorizontalAlignment="Left"
			FrameworkElement.VerticalAlignment="Top"
			FrameworkElement.Width="78"
			FrameworkElement.Height="25"
			Control.Foreground="#FFFFFFFF"
			Control.Background="#FF008BFF"
			Cursor="Hand"
			Panel.ZIndex="5"
			FrameworkElement.Margin="548,72,0,0"
			Control.FontFamily="Montserrat Medium"
			Control.FontWeight="Normal"
			UIElement.Visibility="{Binding Path=SteamOverlay_OnButtonState, Converter='{StaticResource booleanToVisibilityConverter}'}"
			ButtonBase.Command="{Binding SteamOverlay_Off}"
			Control.BorderBrush="{x:Null}">
			<UIElement.Effect>
				<DropShadowEffect
					Opacity="0.1"
					ShadowDepth="4"
					Direction="1" />
			</UIElement.Effect>
			<Control.Template>
				<ControlTemplate>
					<Grid>
						<Rectangle
							Shape.Fill="#FF24A413"
							RadiusX="3 px"
							RadiusY="3 px" />
						<Label
							Control.HorizontalContentAlignment="Center"
							Control.VerticalContentAlignment="Center"
							ContentControl.Content="{DynamicResource m_On}"
							Control.Foreground="#FFFFFFFF"
							Control.FontFamily="Montserrat SemiBold"
							Control.FontSize="10"
							Control.BorderBrush="#FF000000"
							OpacityMask="#FF000000"
							Panel.ZIndex="1"
							Control.FontWeight="Normal" />
					</Grid>
				</ControlTemplate>
			</Control.Template>
		</Button>
		<Label
			ContentControl.Content="{DynamicResource m_PreventSteamWebHelperFromLaunching}"
			FrameworkElement.HorizontalAlignment="Left"
			FrameworkElement.VerticalAlignment="Top"
			FrameworkElement.Width="247"
			Control.Foreground="#FFFFFFFF"
			Control.FontFamily="Montserrat Medium"
			Control.FontSize="11"
			FrameworkElement.Height="24"
			Control.VerticalContentAlignment="Center"
			Control.Padding="3,5,0,5"
			FrameworkElement.Margin="262,128,0,0" />
		<TextBlock
			TextBlock.TextWrapping="Wrap"
			TextBlock.Text="{DynamicResource m_PreventTextWebHelper}"
			FrameworkElement.HorizontalAlignment="Left"
			FrameworkElement.VerticalAlignment="Top"
			FrameworkElement.Width="274"
			Opacity="0.5"
			TextBlock.Foreground="#FFFFFFFF"
			TextBlock.FontWeight="Light"
			TextBlock.FontFamily="Montserrat Light"
			TextBlock.FontSize="9"
			FrameworkElement.Height="44"
			LineHeight="12"
			Padding="3,5,0,5"
			FrameworkElement.Margin="262,147,0,0" />
		<Button
			Name="OFFSteamWebHelper"
			ContentControl.Content="Create"
			IsDefault="True"
			FrameworkElement.HorizontalAlignment="Left"
			FrameworkElement.VerticalAlignment="Top"
			FrameworkElement.Width="78"
			FrameworkElement.Height="25"
			Control.Foreground="#FFFFFFFF"
			Control.Background="#FF008BFF"
			Cursor="Hand"
			Panel.ZIndex="5"
			FrameworkElement.Margin="548,141,0,0"
			Control.FontFamily="Montserrat Medium"
			Control.FontWeight="Normal"
			UIElement.Visibility="{Binding Path=SteamWebHelper_OffButtonState, Converter='{StaticResource booleanToVisibilityConverter}'}"
			ButtonBase.Command="{Binding SteamWebHelper_On}"
			Control.BorderBrush="{x:Null}">
			<UIElement.Effect>
				<DropShadowEffect
					Opacity="0.1"
					ShadowDepth="4"
					Direction="1" />
			</UIElement.Effect>
			<Control.Template>
				<ControlTemplate>
					<Grid>
						<Rectangle
							Shape.Fill="#FFC70000"
							RadiusX="3 px"
							RadiusY="3 px" />
						<Label
							Control.HorizontalContentAlignment="Center"
							Control.VerticalContentAlignment="Center"
							ContentControl.Content="{DynamicResource m_Off}"
							Control.Foreground="#FFFFFFFF"
							Control.FontFamily="Montserrat SemiBold"
							Control.FontSize="10"
							Control.BorderBrush="#FF000000"
							OpacityMask="#FF000000"
							Panel.ZIndex="1"
							Control.FontWeight="Normal" />
					</Grid>
				</ControlTemplate>
			</Control.Template>
		</Button>
		<Button
			Name="ONSteamWebHelper"
			ContentControl.Content="Create"
			IsDefault="True"
			FrameworkElement.HorizontalAlignment="Left"
			FrameworkElement.VerticalAlignment="Top"
			FrameworkElement.Width="78"
			FrameworkElement.Height="25"
			Control.Foreground="#FFFFFFFF"
			Control.Background="#FF008BFF"
			Cursor="Hand"
			Panel.ZIndex="5"
			FrameworkElement.Margin="548,141,0,0"
			Control.FontFamily="Montserrat Medium"
			Control.FontWeight="Normal"
			UIElement.Visibility="{Binding Path=SteamWebHelper_OnButtonState, Converter='{StaticResource booleanToVisibilityConverter}'}"
			ButtonBase.Command="{Binding SteamWebHelper_Off}"
			Control.BorderBrush="{x:Null}">
			<UIElement.Effect>
				<DropShadowEffect
					Opacity="0.1"
					ShadowDepth="4"
					Direction="1" />
			</UIElement.Effect>
			<Control.Template>
				<ControlTemplate>
					<Grid>
						<Rectangle
							Shape.Fill="#FF24A413"
							RadiusX="3 px"
							RadiusY="3 px" />
						<Label
							Control.HorizontalContentAlignment="Center"
							Control.VerticalContentAlignment="Center"
							ContentControl.Content="{DynamicResource m_On}"
							Control.Foreground="#FFFFFFFF"
							Control.FontFamily="Montserrat SemiBold"
							Control.FontSize="10"
							Control.BorderBrush="#FF000000"
							OpacityMask="#FF000000"
							Panel.ZIndex="1"
							Control.FontWeight="Normal" />
					</Grid>
				</ControlTemplate>
			</Control.Template>
		</Button>
		<Label
			ContentControl.Content="{DynamicResource m_DisableNews}"
			FrameworkElement.HorizontalAlignment="Left"
			FrameworkElement.VerticalAlignment="Top"
			FrameworkElement.Width="247"
			Control.Foreground="#FFFFFFFF"
			Control.FontFamily="Montserrat Medium"
			Control.FontSize="11"
			FrameworkElement.Height="24"
			Control.VerticalContentAlignment="Center"
			Control.Padding="3,5,0,5"
			FrameworkElement.Margin="262,210,0,0" />
		<TextBlock
			TextBlock.TextWrapping="Wrap"
			TextBlock.Text="{DynamicResource m_DisableNewsText}"
			FrameworkElement.HorizontalAlignment="Left"
			FrameworkElement.VerticalAlignment="Top"
			FrameworkElement.Width="274"
			Opacity="0.5"
			TextBlock.Foreground="#FFFFFFFF"
			TextBlock.FontWeight="Light"
			TextBlock.FontFamily="Montserrat Light"
			TextBlock.FontSize="9"
			FrameworkElement.Height="44"
			LineHeight="12"
			Padding="3,5,0,5"
			FrameworkElement.Margin="262,229,0,0" />
		<Button
			Name="OFFCsGoNews"
			ContentControl.Content="Create"
			IsDefault="True"
			FrameworkElement.HorizontalAlignment="Left"
			FrameworkElement.VerticalAlignment="Top"
			FrameworkElement.Width="78"
			FrameworkElement.Height="25"
			Control.Foreground="#FFFFFFFF"
			Control.Background="#FF008BFF"
			Cursor="Hand"
			Panel.ZIndex="5"
			FrameworkElement.Margin="548,223,0,0"
			Control.FontFamily="Montserrat Medium"
			Control.FontWeight="Normal"
			UIElement.Visibility="{Binding Path=CsGoNews_OffButtonState, Converter='{StaticResource booleanToVisibilityConverter}'}"
			ButtonBase.Command="{Binding CsGoNews_On}"
			Control.BorderBrush="{x:Null}">
			<UIElement.Effect>
				<DropShadowEffect
					Opacity="0.1"
					ShadowDepth="4"
					Direction="1" />
			</UIElement.Effect>
			<Control.Template>
				<ControlTemplate>
					<Grid>
						<Rectangle
							Shape.Fill="#FFC70000"
							RadiusX="3 px"
							RadiusY="3 px" />
						<Label
							Control.HorizontalContentAlignment="Center"
							Control.VerticalContentAlignment="Center"
							ContentControl.Content="{DynamicResource m_Off}"
							Control.Foreground="#FFFFFFFF"
							Control.FontFamily="Montserrat SemiBold"
							Control.FontSize="10"
							Control.BorderBrush="#FF000000"
							OpacityMask="#FF000000"
							Panel.ZIndex="1"
							Control.FontWeight="Normal" />
					</Grid>
				</ControlTemplate>
			</Control.Template>
		</Button>
		<Button
			Name="ONCsGoNews"
			ContentControl.Content="Create"
			IsDefault="True"
			FrameworkElement.HorizontalAlignment="Left"
			FrameworkElement.VerticalAlignment="Top"
			FrameworkElement.Width="78"
			FrameworkElement.Height="25"
			Control.Foreground="#FFFFFFFF"
			Control.Background="#FF008BFF"
			Cursor="Hand"
			Panel.ZIndex="5"
			FrameworkElement.Margin="548,223,0,0"
			Control.FontFamily="Montserrat Medium"
			Control.FontWeight="Normal"
			UIElement.Visibility="{Binding CsGoNews_OnButtonState, Converter='{StaticResource booleanToVisibilityConverter}'}"
			ButtonBase.Command="{Binding CsGoNews_Off}"
			Control.BorderBrush="{x:Null}">
			<UIElement.Effect>
				<DropShadowEffect
					Opacity="0.1"
					ShadowDepth="4"
					Direction="1" />
			</UIElement.Effect>
			<Control.Template>
				<ControlTemplate>
					<Grid>
						<Rectangle
							Shape.Fill="#FF24A413"
							RadiusX="3 px"
							RadiusY="3 px" />
						<Label
							Control.HorizontalContentAlignment="Center"
							Control.VerticalContentAlignment="Center"
							ContentControl.Content="{DynamicResource m_On}"
							Control.Foreground="#FFFFFFFF"
							Control.FontFamily="Montserrat SemiBold"
							Control.FontSize="10"
							Control.BorderBrush="#FF000000"
							OpacityMask="#FF000000"
							Panel.ZIndex="1"
							Control.FontWeight="Normal" />
					</Grid>
				</ControlTemplate>
			</Control.Template>
		</Button>
		<Label
			ContentControl.Content="{DynamicResource m_ChooseDefaultTab}"
			FrameworkElement.HorizontalAlignment="Left"
			FrameworkElement.VerticalAlignment="Top"
			FrameworkElement.Width="174"
			Control.Foreground="#FFFFFFFF"
			Control.FontFamily="Montserrat Medium"
			Control.FontSize="11"
			FrameworkElement.Height="24"
			Control.VerticalContentAlignment="Center"
			Control.Padding="3,5,0,5"
			FrameworkElement.Margin="38,291,0,0" />
		<ComboBox
			Name="ComboBox_DefaultTab"
			Control.VerticalContentAlignment="Center"
			Control.Background="#FF141519"
			Control.Foreground="#fff"
			FrameworkElement.HorizontalAlignment="Left"
			Control.BorderThickness="0"
			FrameworkElement.VerticalAlignment="Top"
			FrameworkElement.Width="170"
			FrameworkElement.Height="24"
			Control.FontFamily="Yu Gothic UI"
			FrameworkElement.Margin="40,318,0,0"
			Panel.ZIndex="202"
			FrameworkElement.Style="{DynamicResource ComboBoxStyle1}"
			Control.BorderBrush="{x:Null}">
			<FrameworkElement.Resources>
				<ResourceDictionary>
					<SolidColorBrush
						x:Key="{x:Static SystemColors.WindowBrushKey}"
						Color="#FF141519" />
					<SolidColorBrush
						x:Key="{x:Static SystemColors.HighlightBrushKey}"
						Color="Transparent" />
				</ResourceDictionary>
			</FrameworkElement.Resources>
			<i:Interaction.Triggers>
				<i:EventTrigger
					EventName="SelectionChanged">
					<i:InvokeCommandAction
						CommandParameter="ViewImportProgress"
						Command="{Binding DefaultTab_Changed}" />
				</i:EventTrigger>
			</i:Interaction.Triggers>
		</ComboBox>
		<Border
			CornerRadius="5"
			Border.Background="#FF141519"
			FrameworkElement.Margin="38,316,457,114"
			Border.BorderThickness="0"
			Panel.ZIndex="201" />
		<Label
			ContentControl.Content="{DynamicResource m_CreateAdapterCaption}"
			FrameworkElement.HorizontalAlignment="Left"
			FrameworkElement.VerticalAlignment="Top"
			FrameworkElement.Width="247"
			Control.Foreground="#FFFFFFFF"
			Control.FontFamily="Montserrat Medium"
			Control.FontSize="11"
			FrameworkElement.Height="24"
			Control.VerticalContentAlignment="Center"
			Control.Padding="3,5,0,5"
			FrameworkElement.Margin="262,292,0,0" />
		<TextBlock
			TextBlock.TextWrapping="Wrap"
			TextBlock.Text="{DynamicResource m_CreateAdapterText}"
			FrameworkElement.HorizontalAlignment="Left"
			FrameworkElement.VerticalAlignment="Top"
			FrameworkElement.Width="274"
			Opacity="0.5"
			TextBlock.Foreground="#FFFFFFFF"
			TextBlock.FontWeight="Light"
			TextBlock.FontFamily="Montserrat Light"
			TextBlock.FontSize="9"
			FrameworkElement.Height="44"
			LineHeight="12"
			Padding="3,5,0,5"
			FrameworkElement.Margin="262,311,0,0" />
		<Button
			Name="DeleteAdapters"
			ContentControl.Content="Create"
			IsDefault="True"
			FrameworkElement.HorizontalAlignment="Left"
			FrameworkElement.VerticalAlignment="Top"
			FrameworkElement.Width="35"
			FrameworkElement.Height="25"
			Control.Foreground="#FFFFFFFF"
			Control.Background="#FF008BFF"
			Cursor="Hand"
			Panel.ZIndex="5"
			FrameworkElement.Margin="591,308,0,0"
			Control.FontFamily="Montserrat Medium"
			Control.FontWeight="Normal"
			ButtonBase.Command="{Binding RemoveAdapters}"
			Control.BorderBrush="{x:Null}">
			<UIElement.Effect>
				<DropShadowEffect
					Opacity="0.1"
					ShadowDepth="4"
					Direction="1" />
			</UIElement.Effect>
			<Control.Template>
				<ControlTemplate>
					<Grid>
						<Rectangle
							Shape.Fill="#FFC70000"
							RadiusX="3 px"
							RadiusY="3 px" />
						<Rectangle
							FrameworkElement.Height="12 px"
							FrameworkElement.Width="2 px"
							Shape.Fill="#FFFFFFFF"
							RenderTransformOrigin="0.5,0.5">
							<UIElement.RenderTransform>
								<TransformGroup>
									<ScaleTransform />
									<SkewTransform />
									<RotateTransform
										Angle="90" />
									<TranslateTransform />
								</TransformGroup>
							</UIElement.RenderTransform>
						</Rectangle>
					</Grid>
				</ControlTemplate>
			</Control.Template>
		</Button>
		<Button
			Name="AddAdapters"
			ContentControl.Content="Create"
			IsDefault="True"
			FrameworkElement.HorizontalAlignment="Left"
			FrameworkElement.VerticalAlignment="Top"
			FrameworkElement.Width="35"
			FrameworkElement.Height="25"
			Control.Foreground="#FFFFFFFF"
			Control.Background="#FF008BFF"
			Cursor="Hand"
			Panel.ZIndex="5"
			FrameworkElement.Margin="548,308,0,0"
			Control.FontFamily="Montserrat Medium"
			Control.FontWeight="Normal"
			ButtonBase.Command="{Binding AddAdapter}"
			Control.BorderBrush="{x:Null}">
			<UIElement.Effect>
				<DropShadowEffect
					Opacity="0.1"
					ShadowDepth="4"
					Direction="1" />
			</UIElement.Effect>
			<Control.Template>
				<ControlTemplate>
					<Grid>
						<Rectangle
							Shape.Fill="#FF24A413"
							RadiusX="3 px"
							RadiusY="3 px" />
						<Rectangle
							FrameworkElement.Height="12 px"
							FrameworkElement.Width="2 px"
							Shape.Fill="#FFFFFFFF"
							RenderTransformOrigin="0.5,0.5">
							<UIElement.RenderTransform>
								<TransformGroup>
									<ScaleTransform />
									<SkewTransform />
									<RotateTransform
										Angle="90" />
									<TranslateTransform />
								</TransformGroup>
							</UIElement.RenderTransform>
						</Rectangle>
						<Rectangle
							FrameworkElement.Height="12 px"
							FrameworkElement.Width="2 px"
							Shape.Fill="#FFFFFFFF"
							RenderTransformOrigin="0.5,0.5" />
					</Grid>
				</ControlTemplate>
			</Control.Template>
		</Button>
		<Button
			Name="ClearUserdata"
			ContentControl.Content="Create"
			IsDefault="True"
			FrameworkElement.HorizontalAlignment="Left"
			FrameworkElement.VerticalAlignment="Top"
			FrameworkElement.Width="198"
			FrameworkElement.Height="25"
			Control.Foreground="#FFFFFFFF"
			Control.Background="#FF008BFF"
			Cursor="Hand"
			Panel.ZIndex="5"
			FrameworkElement.Margin="262,385,0,0"
			Control.FontFamily="Montserrat Medium"
			Control.FontWeight="Normal"
			ButtonBase.Command="{Binding ClearUserdata}"
			Control.BorderBrush="{x:Null}">
			<UIElement.Effect>
				<DropShadowEffect
					Opacity="0.1"
					ShadowDepth="4"
					Direction="1" />
			</UIElement.Effect>
			<Control.Template>
				<ControlTemplate>
					<Grid>
						<Rectangle
							Shape.Fill="#FFC70000"
							RadiusX="3 px"
							RadiusY="3 px" />
						<Label
							Control.HorizontalContentAlignment="Center"
							Control.VerticalContentAlignment="Center"
							ContentControl.Content="{DynamicResource m_ClearUserdataFolder}"
							FrameworkElement.HorizontalAlignment="Center"
							Control.Foreground="#FFFFFFFF"
							Control.FontFamily="Montserrat SemiBold"
							Control.FontSize="10"
							Control.BorderBrush="#FF000000"
							OpacityMask="#FF000000"
							Panel.ZIndex="1"
							Control.FontWeight="Normal" />
					</Grid>
				</ControlTemplate>
			</Control.Template>
		</Button>
		<Button
			Name="InstallSteam"
			ContentControl.Content="Create"
			IsDefault="True"
			FrameworkElement.HorizontalAlignment="Left"
			FrameworkElement.VerticalAlignment="Top"
			FrameworkElement.Width="150"
			FrameworkElement.Height="25"
			Control.Foreground="#FFFFFFFF"
			Control.Background="#FF008BFF"
			Cursor="Hand"
			Panel.ZIndex="5"
			FrameworkElement.Margin="475,385,0,0"
			Control.FontFamily="Montserrat Medium"
			Control.FontWeight="Normal"
			ButtonBase.Command="{Binding InstallOldSteam}"
			Control.BorderBrush="{x:Null}">
			<UIElement.Effect>
				<DropShadowEffect
					Opacity="0.1"
					ShadowDepth="4"
					Direction="1" />
			</UIElement.Effect>
			<Control.Template>
				<ControlTemplate>
					<Grid>
						<Rectangle
							Shape.Fill="#0067C7"
							RadiusX="3 px"
							RadiusY="3 px" />
						<Label
							Control.HorizontalContentAlignment="Center"
							Control.VerticalContentAlignment="Center"
							ContentControl.Content="{DynamicResource m_InstallOldSteam}"
							FrameworkElement.HorizontalAlignment="Center"
							Control.Foreground="#FFFFFFFF"
							Control.FontFamily="Montserrat SemiBold"
							Control.FontSize="10"
							Control.BorderBrush="#FF000000"
							OpacityMask="#FF000000"
							Panel.ZIndex="1"
							Control.FontWeight="Normal" />
					</Grid>
				</ControlTemplate>
			</Control.Template>
		</Button>
	</Grid>
</Page>
